// Mocks generated by Mockito 5.1.0 from annotations
// in tv_show/test/helpers/test_helper.dart.
// Do not manually edit this file.

import 'dart:async' as _i4;

import 'package:core/core.dart' as _i2;
import 'package:dartz/dartz.dart' as _i3;
import 'package:mockito/mockito.dart' as _i1;

// ignore_for_file: type=lint
// ignore_for_file: avoid_redundant_argument_values
// ignore_for_file: avoid_setters_without_getters
// ignore_for_file: comment_references
// ignore_for_file: implementation_imports
// ignore_for_file: invalid_use_of_visible_for_testing_member
// ignore_for_file: prefer_const_constructors
// ignore_for_file: unnecessary_parenthesis
// ignore_for_file: camel_case_types

class _FakeTVShowRepository_0 extends _i1.Fake implements _i2.TVShowRepository {
}

class _FakeEither_1<L, R> extends _i1.Fake implements _i3.Either<L, R> {}

/// A class which mocks [GetTVShowDetail].
///
/// See the documentation for Mockito's code generation for more information.
class MockGetTVShowDetail extends _i1.Mock implements _i2.GetTVShowDetail {
  MockGetTVShowDetail() {
    _i1.throwOnMissingStub(this);
  }

  @override
  _i2.TVShowRepository get repository =>
      (super.noSuchMethod(Invocation.getter(#repository),
          returnValue: _FakeTVShowRepository_0()) as _i2.TVShowRepository);
  @override
  _i4.Future<_i3.Either<_i2.Failure, _i2.TVShowDetail>> execute(int? id) =>
      (super.noSuchMethod(Invocation.method(#execute, [id]),
          returnValue: Future<_i3.Either<_i2.Failure, _i2.TVShowDetail>>.value(
              _FakeEither_1<_i2.Failure, _i2.TVShowDetail>())) as _i4
          .Future<_i3.Either<_i2.Failure, _i2.TVShowDetail>>);
}

/// A class which mocks [GetTVShowRecommendations].
///
/// See the documentation for Mockito's code generation for more information.
class MockGetTVShowRecommendations extends _i1.Mock
    implements _i2.GetTVShowRecommendations {
  MockGetTVShowRecommendations() {
    _i1.throwOnMissingStub(this);
  }

  @override
  _i2.TVShowRepository get repository =>
      (super.noSuchMethod(Invocation.getter(#repository),
          returnValue: _FakeTVShowRepository_0()) as _i2.TVShowRepository);
  @override
  _i4.Future<_i3.Either<_i2.Failure, List<_i2.TVShow>>> execute(dynamic id) =>
      (super.noSuchMethod(Invocation.method(#execute, [id]),
          returnValue: Future<_i3.Either<_i2.Failure, List<_i2.TVShow>>>.value(
              _FakeEither_1<_i2.Failure, List<_i2.TVShow>>())) as _i4
          .Future<_i3.Either<_i2.Failure, List<_i2.TVShow>>>);
}

/// A class which mocks [GetNowPlayingTVShows].
///
/// See the documentation for Mockito's code generation for more information.
class MockGetNowPlayingTVShows extends _i1.Mock
    implements _i2.GetNowPlayingTVShows {
  MockGetNowPlayingTVShows() {
    _i1.throwOnMissingStub(this);
  }

  @override
  _i2.TVShowRepository get repository =>
      (super.noSuchMethod(Invocation.getter(#repository),
          returnValue: _FakeTVShowRepository_0()) as _i2.TVShowRepository);
  @override
  _i4.Future<_i3.Either<_i2.Failure, List<_i2.TVShow>>> execute() =>
      (super.noSuchMethod(Invocation.method(#execute, []),
          returnValue: Future<_i3.Either<_i2.Failure, List<_i2.TVShow>>>.value(
              _FakeEither_1<_i2.Failure, List<_i2.TVShow>>())) as _i4
          .Future<_i3.Either<_i2.Failure, List<_i2.TVShow>>>);
}

/// A class which mocks [GetPopularTVShows].
///
/// See the documentation for Mockito's code generation for more information.
class MockGetPopularTVShows extends _i1.Mock implements _i2.GetPopularTVShows {
  MockGetPopularTVShows() {
    _i1.throwOnMissingStub(this);
  }

  @override
  _i2.TVShowRepository get repository =>
      (super.noSuchMethod(Invocation.getter(#repository),
          returnValue: _FakeTVShowRepository_0()) as _i2.TVShowRepository);
  @override
  _i4.Future<_i3.Either<_i2.Failure, List<_i2.TVShow>>> execute() =>
      (super.noSuchMethod(Invocation.method(#execute, []),
          returnValue: Future<_i3.Either<_i2.Failure, List<_i2.TVShow>>>.value(
              _FakeEither_1<_i2.Failure, List<_i2.TVShow>>())) as _i4
          .Future<_i3.Either<_i2.Failure, List<_i2.TVShow>>>);
}

/// A class which mocks [GetTopRatedTVShows].
///
/// See the documentation for Mockito's code generation for more information.
class MockGetTopRatedTVShows extends _i1.Mock
    implements _i2.GetTopRatedTVShows {
  MockGetTopRatedTVShows() {
    _i1.throwOnMissingStub(this);
  }

  @override
  _i2.TVShowRepository get repository =>
      (super.noSuchMethod(Invocation.getter(#repository),
          returnValue: _FakeTVShowRepository_0()) as _i2.TVShowRepository);
  @override
  _i4.Future<_i3.Either<_i2.Failure, List<_i2.TVShow>>> execute() =>
      (super.noSuchMethod(Invocation.method(#execute, []),
          returnValue: Future<_i3.Either<_i2.Failure, List<_i2.TVShow>>>.value(
              _FakeEither_1<_i2.Failure, List<_i2.TVShow>>())) as _i4
          .Future<_i3.Either<_i2.Failure, List<_i2.TVShow>>>);
}

/// A class which mocks [GetWatchListStatusTVShow].
///
/// See the documentation for Mockito's code generation for more information.
class MockGetWatchListStatusTVShow extends _i1.Mock
    implements _i2.GetWatchListStatusTVShow {
  MockGetWatchListStatusTVShow() {
    _i1.throwOnMissingStub(this);
  }

  @override
  _i2.TVShowRepository get repository =>
      (super.noSuchMethod(Invocation.getter(#repository),
          returnValue: _FakeTVShowRepository_0()) as _i2.TVShowRepository);
  @override
  _i4.Future<bool> execute(int? id) =>
      (super.noSuchMethod(Invocation.method(#execute, [id]),
          returnValue: Future<bool>.value(false)) as _i4.Future<bool>);
}

/// A class which mocks [GetWatchlistTVShows].
///
/// See the documentation for Mockito's code generation for more information.
class MockGetWatchlistTVShows extends _i1.Mock
    implements _i2.GetWatchlistTVShows {
  MockGetWatchlistTVShows() {
    _i1.throwOnMissingStub(this);
  }

  @override
  _i4.Future<_i3.Either<_i2.Failure, List<_i2.TVShow>>> execute() =>
      (super.noSuchMethod(Invocation.method(#execute, []),
          returnValue: Future<_i3.Either<_i2.Failure, List<_i2.TVShow>>>.value(
              _FakeEither_1<_i2.Failure, List<_i2.TVShow>>())) as _i4
          .Future<_i3.Either<_i2.Failure, List<_i2.TVShow>>>);
}

/// A class which mocks [SaveWatchlistTvShow].
///
/// See the documentation for Mockito's code generation for more information.
class MockSaveWatchlistTvShow extends _i1.Mock
    implements _i2.SaveWatchlistTvShow {
  MockSaveWatchlistTvShow() {
    _i1.throwOnMissingStub(this);
  }

  @override
  _i2.TVShowRepository get repository =>
      (super.noSuchMethod(Invocation.getter(#repository),
          returnValue: _FakeTVShowRepository_0()) as _i2.TVShowRepository);
  @override
  _i4.Future<_i3.Either<_i2.Failure, String>> execute(
          _i2.TVShowDetail? movie) =>
      (super.noSuchMethod(Invocation.method(#execute, [movie]),
              returnValue: Future<_i3.Either<_i2.Failure, String>>.value(
                  _FakeEither_1<_i2.Failure, String>()))
          as _i4.Future<_i3.Either<_i2.Failure, String>>);
}

/// A class which mocks [RemoveWatchlistTvShow].
///
/// See the documentation for Mockito's code generation for more information.
class MockRemoveWatchlistTvShow extends _i1.Mock
    implements _i2.RemoveWatchlistTvShow {
  MockRemoveWatchlistTvShow() {
    _i1.throwOnMissingStub(this);
  }

  @override
  _i2.TVShowRepository get repository =>
      (super.noSuchMethod(Invocation.getter(#repository),
          returnValue: _FakeTVShowRepository_0()) as _i2.TVShowRepository);
  @override
  _i4.Future<_i3.Either<_i2.Failure, String>> execute(
          _i2.TVShowDetail? movie) =>
      (super.noSuchMethod(Invocation.method(#execute, [movie]),
              returnValue: Future<_i3.Either<_i2.Failure, String>>.value(
                  _FakeEither_1<_i2.Failure, String>()))
          as _i4.Future<_i3.Either<_i2.Failure, String>>);
}
